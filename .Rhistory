plot(hiato_pib)
# VIX  ####
vix <- read.csv("Dados/VIX.csv",dec = ',')
vix
# vix <- as.xts(ts((vix[,2]), start = c(1999,8), end = c(2021,10), frequency = 12))
# plot(vix)
# MSCI ####
MSCI <- read.csv("Dados/MSCI.csv", dec = ',')
MSCI
# MSCI <- as.xts(ts((MSCI[,2]), start = c(2004,8), end = c(2021,10), frequency = 12))
# plot(MSCI)
# Fiscal ####
fiscal <- read.csv('Dados/Resultado_primario_divida.csv', sep = ';', dec = ',')
fiscal
#######################################################################
#                                                                     #
#                     GRÁFICOS                                        #
#                                                                     #
#######################################################################
# Criando diretórios ####
# periodos_aula <- c('I (99-03)','II (04-10)','III (11-14)','IV (15-16)','V (17-19)','VI (20-21)','Agregado')
#
# for (i in periodos_aula) {
#   ifelse(!dir.exists(file.path(i)),
#          dir.create(file.path(i)),
#          FALSE)
# }
# Gráficos de RMI ####
date <- seq(as.Date("1999-08-1"), as.Date("2021-10-1"), by = "month")
df_metas <- tibble(date,metas_mensal[,2],metas_mensal[,3],metas_mensal[,4],metas_mensal[,5],
.name_repair = ~ c('date','Meta','Piso','Teto','IPCA'))
# rects_mensal <- data.frame(xstart = c(1999,2004,2011,2015,2017,2019),
#                     xend = c(2004,2011,2015,2017,2019,2021),
#                     col = c('I (99-03)','II (04-10)','III (11-14)','IV (15-16)','V (17-19)','VI (20-21)'))
rects_mensal <- data.frame(xstart = c(as.Date("1999-08-30"),as.Date("2004-01-01"),as.Date("2011-01-01"),as.Date("2015-01-01"),as.Date("2017-01-01"),as.Date("2020-01-01")),
xend = c(as.Date("2003-12-31"),as.Date("2010-12-31"),as.Date("2014-12-31"),as.Date("2016-12-31"),as.Date("2019-12-30"),as.Date( "2021-10-1")),
col = c('I (99-03)','II (04-10)','III (11-14)','IV (15-16)','V (17-19)','VI (20-21)'))
metas_mensalplot <- ggplot(df_metas)  +
geom_ribbon(aes(x=date, ymin=Meta, ymax =Teto), fill = "GREY80") +
geom_ribbon(aes(x=date, ymin=Piso, ymax =Meta), fill = "GREY80") +
geom_rect(data = rects_mensal, aes(xmin = xstart, xmax = xend, ymin = min(df_metas$Piso)-1, ymax = max(df_metas$IPCA)+1, fill = col), alpha = 0.4) +
geom_line(aes(x=date, y=Piso), color = "GREY70") +
geom_line(aes(x=date, y=Teto), color = "GREY70") +
geom_line(aes(x=date, y=Meta), color = "GREY50") +
geom_line(aes(x=date,y=IPCA), size = 1, color = 'darkred') +
scale_y_continuous(labels = function(x) paste0(x, "%"),breaks = scales::pretty_breaks(n = 6),expand = c(0,0)) +
scale_x_date(date_breaks = '1 year', date_minor_breaks = '6 months', date_labels = "%y",expand = c(0, 0.02)) +
# scale_x_continuous(breaks=seq(1999,2021,1),
#                     labels=paste(c(""),rep(1999:2021,each=1)),expand = c(0.012, 0.02)) +
labs(title = 'Taxa de Inflação acumulada em 12 meses e bandas do Regime de Metas da Inflação.') +
scale_fill_brewer(palette="Blues", name = 'Períodos') +
guides(fill = "none") +
ylab('') +
xlab('') +
theme_classic() +
theme(  panel.grid = element_blank(),
panel.border = element_blank(),
legend.position="right",
legend.title = element_blank(),
legend.text = element_text(size=10),
legend.key = element_rect(colour = "black"),
legend.box.background = element_rect(colour = "black", size = 1),
axis.text.x = element_text(angle = 45, vjust = 0.5, hjust = 0.6,size=10, colour = 'black'),
axis.text.y = element_text(size=10))
metas_mensalplot
p <- ggplotly(metas_mensalplot) %>%
layout(legend = list(orientation = "h", x = 0, y =-0.2)) %>%
config(displayModeBar = FALSE)
p
# For loop para remover legendas
for (i in 1:8) {
p$x$data[[i]]$showlegend <- F
}
p_metas <- p
# Tradables, Nontradables e Monitorados ####
date <- seq(as.Date("1999-08-1"), as.Date("2021-10-1"), by = "month")
df <- tibble(date,IPCA_trad, IPCA_nontrad,IPCA_monit,df_metas[,5])
#,             .name_repair = ~ c('date','Tradables','Nontradables','Monitorados','IPCA'))
# df %>%
#   mutate(across(!date,as.numeric))
colnames(df) <- c('date','Tradables','Nontradables','Monitorados','IPCA')
df
rects_mensal <- data.frame(xstart = c(as.Date("1999-08-30"),as.Date("2004-01-01"),as.Date("2011-01-01"),as.Date("2015-01-01"),as.Date("2017-01-01"),as.Date("2020-01-01")),
xend = c(as.Date("2003-12-31"),as.Date("2010-12-31"),as.Date("2014-12-31"),as.Date("2016-12-31"),as.Date("2019-12-30"),as.Date( "2021-10-1")),
col = c('I (99-03)','II (04-10)','III (11-14)','IV (15-16)','V (17-19)','VI (20-21)'))
df %>%
mutate(across(!date,as.numeric))
df <- reshape2::melt(df, id.vars= 'date')
df
IPCA_BCB_plot <- ggplot(df)  +
geom_ribbon(data = df_metas, aes(x=date, ymin=Piso, ymax =Teto), fill = "GREY80") +
geom_line(data = metas_mensal,aes(x=date, y=Piso), color = "GREY70") +
geom_line(data = metas_mensal,aes(x=date, y=Teto), color = "GREY70") +
#geom_ribbon(data= df_metas, aes(x=date, ymin=Piso, ymax =Meta), fill = "GREY80") +
geom_rect(data = rects_mensal, aes(xmin = xstart, xmax = xend, ymin = min(df$value)-1, ymax = max(df$value)+1, fill = col), alpha = 0.4) +
geom_line(aes(x=date, y=value, color=variable, linetype = variable), size = 1) +
scale_y_continuous(labels = function(x) paste0(x, "%"),breaks = scales::pretty_breaks(n = 6), expand = c(0,0)) +
scale_x_date(date_breaks = '1 year', date_minor_breaks = '6 months', date_labels = "%y",expand = c(0, 0.02)) +
# scale_x_continuous(breaks=seq(1999,2021,1),
#                     labels=paste(c(""),rep(1999:2021,each=1)),expand = c(0.012, 0.02)) +
labs(title = 'Decomposição do IPCA') +
scale_fill_brewer(palette="Blues", name = 'Períodos') +
scale_color_brewer(palette="Set1", name = 'Períodos') +
guides(linetype = "none", fill = 'none') +
ylab('') +
xlab('') +
theme_classic() +
theme(  panel.grid = element_blank(),
panel.border = element_blank(),
legend.position="bottom",
legend.title = element_blank(),
legend.text = element_text(size=10),
legend.key = element_rect(colour = "black"),
legend.box.background = element_rect(colour = "black", size = 1),
axis.text.x = element_text(angle = 45, vjust = 0.5, hjust = 0.6,size=10, colour = 'black'),
axis.text.y = element_text(size=10))
IPCA_BCB_plot
p <- ggplotly(IPCA_BCB_plot) %>%
layout(legend = list(orientation = "h", x = 0, y =-0.2)) %>%
config(displayModeBar = FALSE)
# For loop para remover legendas
for (i in 2:9) {
p$x$data[[i]]$showlegend <- F
}
p_IPCA_BCB <- p
p_IPCA_BCB
# IPCA Industrializados e Serviços ####
date <- seq(as.Date("1999-08-1"), as.Date("2021-10-1"), by = "month")
df <- tibble(date,IPCA_dur, IPCA_semidur,IPCA_ndur,IPCA_servicos,df_metas[,5],
.name_repair = ~ c('date','Duráveis','Semiduráveis','Não duráveis','Serviços','IPCA'))
rects_mensal <- data.frame(xstart = c(as.Date("1999-08-30"),as.Date("2004-01-01"),as.Date("2011-01-01"),as.Date("2015-01-01"),as.Date("2017-01-01"),as.Date("2020-01-01")),
xend = c(as.Date("2003-12-31"),as.Date("2010-12-31"),as.Date("2014-12-31"),as.Date("2016-12-31"),as.Date("2019-12-30"),as.Date( "2021-10-1")),
col = c('I (99-03)','II (04-10)','III (11-14)','IV (15-16)','V (17-19)','VI (20-21)'))
df <- reshape2::melt(df, id.vars= 'date')
df
IPCA_Ind_plot <- ggplot(df)  +
geom_ribbon(data = df_metas, aes(x=date, ymin=Piso, ymax =Teto), fill = "GREY80") +
geom_line(data = metas_mensal,aes(x=date, y=Piso), color = "GREY70") +
geom_line(data = metas_mensal,aes(x=date, y=Teto), color = "GREY70") +
geom_rect(data = rects_mensal, aes(xmin = xstart, xmax = xend, ymin = min(df$value)-1, ymax = max(df$value)+1, fill = col), alpha = 0.4) +
geom_line(aes(x=date, y=value, color=variable, linetype = variable), size = 1) +
scale_y_continuous(labels = function(x) paste0(x, "%"),breaks = scales::pretty_breaks(n = 6), expand = c(0,0)) +
scale_x_date(date_breaks = '1 year', date_minor_breaks = '6 months', date_labels = "%y",expand = c(0, 0.02)) +
labs(title = 'Decomposição do IPCA - Industrializados e Serviços') +
scale_fill_brewer(palette="Blues", name = 'Períodos') +
scale_color_brewer(palette="Set1", name = 'Períodos') +
guides(linetype = "none", fill = 'none') +
ylab('') +
xlab('') +
theme_classic() +
theme(  panel.grid = element_blank(),
panel.border = element_blank(),
legend.position="bottom",
legend.title = element_blank(),
legend.text = element_text(size=10),
legend.key = element_rect(colour = "black"),
legend.box.background = element_rect(colour = "black", size = 1),
axis.text.x = element_text(angle = 45, vjust = 0.5, hjust = 0.6,size=10, colour = 'black'),
axis.text.y = element_text(size=10))
IPCA_Ind_plot
p <- ggplotly(IPCA_Ind_plot) %>%
layout(legend = list(orientation = "h", x = 0, y =-0.2)) %>%
config(displayModeBar = FALSE)
# For loop para remover legendas
for (i in 2:9) {
p$x$data[[i]]$showlegend <- F
}
p_IPCA_Ind <- p
# Commodities ####
date <- seq(as.Date("1999-08-1"), as.Date("2021-10-1"), by = "month")
ibc_total
colnames(ibc_total) <- 'IBC'
df <- tibble(date, ibc_total, ibc_agro, ibc_metal, ibc_energia,
.name_repair = ~ c('date','IBC - Total','IBC - Agro','IBC - Metal','IBC - Energia'))
df
rects_mensal <- data.frame(xstart = c(as.Date("1999-08-30"),as.Date("2004-01-01"),as.Date("2011-01-01"),as.Date("2015-01-01"),as.Date("2017-01-01"),as.Date("2020-01-01")),
xend = c(as.Date("2003-12-31"),as.Date("2010-12-31"),as.Date("2014-12-31"),as.Date("2016-12-31"),as.Date("2019-12-30"),as.Date( "2021-10-1")),
col = c('I (99-03)','II (04-10)','III (11-14)','IV (15-16)','V (17-19)','VI (20-21)'))
df %>%
mutate(across(!date,as.numeric))
df <- reshape2::melt(df, id.vars= 'date')
df
IBC_plot <- ggplot(df)  +
#geom_ribbon(data = df_metas, aes(x=date, ymin=Piso, ymax =Teto), fill = "GREY80") +
geom_rect(data = rects_mensal, aes(xmin = xstart, xmax = xend, ymin = min(df$value)-1, ymax = max(df$value)+1, fill = col), alpha = 0.4) +
geom_line(aes(x=date, y=value, color=variable, linetype = variable), size = 1) +
scale_y_continuous(labels = function(x) paste0(x, ""),breaks = scales::pretty_breaks(n = 6), expand = c(0,0)) +
scale_x_date(date_breaks = '1 year', date_minor_breaks = '6 months', date_labels = "%y",expand = c(0, 0.02)) +
labs(title = 'Índice de preços de commodities IBC') +
scale_fill_brewer(palette="Blues", name = 'Períodos') +
scale_color_brewer(palette="Set1", name = 'Períodos') +
guides(linetype = "none", fill = 'none') +
ylab('') +
xlab('') +
theme_classic() +
theme(  panel.grid = element_blank(),
panel.border = element_blank(),
legend.position="bottom",
legend.title = element_blank(),
legend.text = element_text(size=10),
legend.key = element_rect(colour = "black"),
legend.box.background = element_rect(colour = "black", size = 1),
axis.text.x = element_text(angle = 45, vjust = 0.5, hjust = 0.6,size=10, colour = 'black'),
axis.text.y = element_text(size=10))
IBC_plot
p <- ggplotly(IBC_plot) %>%
layout(legend = list(orientation = "h", x = 0, y =-0.2)) %>%
config(displayModeBar = FALSE)
# For loop para remover legendas
for (i in 1:6) {
p$x$data[[i]]$showlegend <- F
}
p_IBC <- p
# Fiscal ####
date <- seq(as.Date("2002-11-1"), as.Date("2021-09-1"), by = "month")
df <- tibble(date, fiscal[,2], fiscal[,3],
.name_repair = ~ c('date','DLSP','Resultado Primário (NFSP)'))
rects_mensal <- data.frame(xstart = c(as.Date("1999-08-30"),as.Date("2004-01-01"),as.Date("2011-01-01"),as.Date("2015-01-01"),as.Date("2017-01-01"),as.Date("2020-01-01")),
xend = c(as.Date("2003-12-31"),as.Date("2010-12-31"),as.Date("2014-12-31"),as.Date("2016-12-31"),as.Date("2019-12-31"),as.Date( "2021-10-1")),
col = c('I (99-03)','II (04-10)','III (11-14)','IV (15-16)','V (17-19)','VI (20-21)'))
df %>%
mutate(across(!date,as.numeric))
df <- reshape2::melt(df, id.vars= 'date')
df
fiscal_plot <- ggplot(df)  +
#geom_ribbon(data = df_metas, aes(x=date, ymin=Piso, ymax =Teto), fill = "GREY80") +
geom_hline(yintercept = 0, colour= 'darkgrey') +
geom_rect(data = rects_mensal, aes(xmin = xstart, xmax = xend, ymin = min(df$value)-1, ymax = max(df$value)+1, fill = col), alpha = 0.4) +
geom_line(aes(x=date, y=value, color=variable, linetype = variable),stat="identity", size = 1) +
scale_y_continuous(labels = function(x) paste0(x, ""),breaks = scales::pretty_breaks(n = 6), expand = c(0,0)) +
# sec.axis = sec_axis(~(./max(df[which(df['variable'] == ''),'value'])*5)), name="") +
scale_x_date(date_breaks = '1 year', date_minor_breaks = '6 months', date_labels = "%y",expand = c(0, 0.02)) +
labs(title = 'DLSP e Resultado Primário (NFSP)') +
scale_fill_brewer(palette="Blues", name = 'Períodos') +
scale_color_brewer(palette="Set1", name = 'Períodos') +
guides(linetype = "none", fill = 'none') +
ylab('') +
xlab('') +
theme_classic() +
theme(  panel.grid = element_blank(),
panel.border = element_blank(),
legend.position="bottom",
legend.title = element_blank(),
legend.text = element_text(size=10),
legend.key = element_rect(colour = "black"),
legend.box.background = element_rect(colour = "black", size = 1),
axis.text.x = element_text(angle = 45, vjust = 0.5, hjust = 0.6,size=10, colour = 'black'),
axis.text.y = element_text(size=10))
fiscal_plot
p <- ggplotly(fiscal_plot) %>%
layout(legend = list(orientation = "h", x = 0, y =-0.2)
)%>%
config(displayModeBar = FALSE)
# For loop para remover legendas
for (i in 1:7) {
p$x$data[[i]]$showlegend <- F
}
p_fiscal <- p
p_fiscal
# Cambio, Fed, EMBI ####
date <- seq(as.Date("1999-08-1"), as.Date("2021-10-1"), by = "month")
embi_2 <- embi/100
embi_2
embi
fed_embi <- embi_2 + fed_rate
plot(fed_embi)
plot(embi_2)
fed_rate
df <- tibble(date, selic, embi_2,fed_embi, fed_rate,cambio,
.name_repair = ~ c('date','Selic','EMBI-Br','FED Rates' , 'FED Rates + EMBI-Br','Taxa de câmbio nominal'))
df <- df %>%
fill(Selic)
df$`Taxa de câmbio nominal` <- df$`Taxa de câmbio nominal` *5
df
rects_mensal <- data.frame(xstart = c(as.Date("1999-08-30"),as.Date("2004-01-01"),as.Date("2011-01-01"),as.Date("2015-01-01"),as.Date("2017-01-01"),as.Date("2020-01-01")),
xend = c(as.Date("2003-12-31"),as.Date("2010-12-31"),as.Date("2014-12-31"),as.Date("2016-12-31"),as.Date("2019-12-30"),as.Date( "2021-10-1")),
col = c('I (99-03)','II (04-10)','III (11-14)','IV (15-16)','V (17-19)','VI (20-21)'))
df %>%
mutate(across(!date,as.numeric))
df <- reshape2::melt(df, id.vars= 'date')
df
Juros_cambio_plot <- ggplot(df)  +
#geom_ribbon(data = df_metas, aes(x=date, ymin=Piso, ymax =Teto), fill = "GREY80") +
geom_rect(data = rects_mensal, aes(xmin = xstart, xmax = xend, ymin = min(df$value)-1, ymax = max(df$value)+1, fill = col), alpha = 0.4) +
geom_line(aes(x=date, y=value, color=variable, linetype = variable),stat="identity", size = 1) +
scale_y_continuous(labels = function(x) paste0(x, ""),breaks = scales::pretty_breaks(n = 6), expand = c(0,0),
sec.axis = sec_axis(~(./max(df[which(df['variable'] == 'Selic'),'value'])*5)), name="") +
scale_x_date(date_breaks = '1 year', date_minor_breaks = '6 months', date_labels = "%y",expand = c(0, 0.02)) +
labs(title = 'Taxa Selic, FED Rate, EMBI-Br e Taxa de câmbio nominal') +
scale_fill_brewer(palette="Blues", name = 'Períodos') +
scale_color_brewer(palette="Set1", name = 'Períodos') +
guides(linetype = "none", fill = 'none') +
ylab('') +
xlab('') +
theme_classic() +
theme(  panel.grid = element_blank(),
panel.border = element_blank(),
legend.position="bottom",
legend.title = element_blank(),
legend.text = element_text(size=10),
legend.key = element_rect(colour = "black"),
legend.box.background = element_rect(colour = "black", size = 1),
axis.text.x = element_text(angle = 45, vjust = 0.5, hjust = 0.6,size=10, colour = 'black'),
axis.text.y = element_text(size=10))
Juros_cambio_plot
max(df$value)/max(df[which(df['variable'] == 'Selic'),'value'])*5
ay <- list(
tickfont = list(size=12),
titlefont=list(size=15),
range = c(min(df$value),max(df$value)/max(df[which(df['variable'] == 'Selic'),'value'])*5),
overlaying = "y",
nticks = 6,
side = "right",
title = ""
)
p <- ggplotly(Juros_cambio_plot) %>%
add_lines(x=~date, y=~value, colors=NULL, yaxis="y2",
data=df, showlegend=FALSE, inherit=FALSE) %>%
layout(yaxis2 = ay, legend = list(orientation = "h", x = 0, y =-0.2)
)%>%
config(displayModeBar = FALSE)
# For loop para remover legendas
for (i in 1:6) {
p$x$data[[i]]$showlegend <- F
}
p_juros_cambio <- p
# PIB e Hiato ####
date <- seq(as.Date("1999-03-1"), as.Date("2021-2-1"), by = "quarter")
pib
hiato_pib_2 <- hiato_pib * 100
df <- tibble(date, pib, hiato_pib_2,
.name_repair = ~ c('date','PIB','Hiato do PIB'))
df
rects_mensal <- data.frame(xstart = c(as.Date("1999-08-30"),as.Date("2004-01-01"),as.Date("2011-01-01"),as.Date("2015-01-01"),as.Date("2017-01-01"),as.Date("2020-01-01")),
xend = c(as.Date("2003-12-31"),as.Date("2010-12-31"),as.Date("2014-12-31"),as.Date("2016-12-31"),as.Date("2019-12-30"),as.Date( "2021-10-1")),
col = c('I (99-03)','II (04-10)','III (11-14)','IV (15-16)','V (17-19)','VI (20-21)'))
df %>%
mutate(across(!date,as.numeric))
df <- reshape2::melt(df, id.vars= 'date')
df
PIB_Hiato_plot <- ggplot(df)  +
#geom_ribbon(data = df_metas, aes(x=date, ymin=Piso, ymax =Teto), fill = "GREY80") +
geom_rect(data = rects_mensal, aes(xmin = xstart, xmax = xend, ymin = min(df$value)-1, ymax = max(df$value)+1, fill = col), alpha = 0.4) +
geom_hline(yintercept = 0, colour= 'darkgrey') +
geom_line(aes(x=date, y=value, color=variable, linetype = variable), size = 1) +
scale_y_continuous(labels = function(x) paste0(x, "%"),breaks = scales::pretty_breaks(n = 6), expand = c(0,0)) +
scale_x_date(date_breaks = '1 year', date_minor_breaks = '6 months', date_labels = "%y",expand = c(0, 0.02)) +
labs(title = 'Variação real do PIB e Hiato do Produto') +
scale_fill_brewer(palette="Blues", name = 'Períodos') +
scale_color_brewer(palette="Set1", name = 'Períodos') +
guides(linetype = "none", fill = 'none') +
ylab('') +
xlab('') +
theme_classic() +
theme(  panel.grid = element_blank(),
panel.border = element_blank(),
legend.position="bottom",
legend.title = element_blank(),
legend.text = element_text(size=10),
legend.key = element_rect(colour = "black"),
legend.box.background = element_rect(colour = "black", size = 1),
axis.text.x = element_text(angle = 45, vjust = 0.5, hjust = 0.6,size=10, colour = 'black'),
axis.text.y = element_text(size=10))
PIB_Hiato_plot
p <- ggplotly(PIB_Hiato_plot) %>%
layout(legend = list(orientation = "h", x = 0, y =-0.2))%>%
config(displayModeBar = FALSE)
p
# For loop para remover legendas
for (i in 1:6) {
p$x$data[[i]]$showlegend <- F
}
p_PIB_Hiato <- p
# VIX e MSCI ####
date <- seq(as.Date("1999-08-1"), as.Date("2021-10-1"), by = "month")
max_length <- max(c(length(vix[,2]), length(MSCI[,2])))    # Find out maximum length
max_length
length(MSCI[,2])
length(c(rep(NA, max_length - length(MSCI[,2])),MSCI[,2]))
length(vix[,2])
scale <- max(MSCI[,2])/max(vix[,2])-1
df_2 <- data.frame(date = date,
VIX = vix[,2]*scale,
MSCI = c(rep(NA, max_length - length(MSCI[,2])),MSCI[,2])
)
df_2
rects_mensal <- data.frame(xstart = c(as.Date("1999-08-30"),as.Date("2004-01-01"),as.Date("2011-01-01"),as.Date("2015-01-01"),as.Date("2017-01-01"),as.Date("2020-01-01")),
xend = c(as.Date("2003-12-31"),as.Date("2010-12-31"),as.Date("2014-12-31"),as.Date("2016-12-31"),as.Date("2019-12-30"),as.Date( "2021-10-1")),
col = c('I (99-03)','II (04-10)','III (11-14)','IV (15-16)','V (17-19)','VI (20-21)'))
df <- tibble(df_2) %>%
mutate(across(!date,as.numeric))
df <- reshape2::melt(df, id.vars= 'date')
df_2
VIX_MSCI_plot <- ggplot(df)  +
#geom_ribbon(data = df_metas, aes(x=date, ymin=Piso, ymax =Teto), fill = "GREY80") +
geom_rect(data = rects_mensal, aes(xmin = xstart, xmax = xend, ymin = min(df_2[61:267,2:3])-1, ymax = max(df_2[61:267,2:3])+1, fill = col), alpha = 0.4) +
geom_line(aes(x=date, y=value, color=variable, linetype = variable), size = 1) +
scale_y_continuous(labels = function(x) paste0(x, ""),breaks = scales::pretty_breaks(n = 6), expand = c(0,0),
sec.axis = sec_axis(~(./scale), name="")) +
scale_x_date(date_breaks = '1 year', date_minor_breaks = '6 months', date_labels = "%y",expand = c(0, 0.02)) +
labs(title = 'Índice MSCI e Índice VIX') +
scale_fill_brewer(palette="Blues", name = 'Períodos') +
scale_color_brewer(palette="Set1", name = 'Períodos') +
guides(linetype = "none", fill = 'none') +
ylab('') +
xlab('') +
theme_classic() +
theme(  panel.grid = element_blank(),
panel.border = element_blank(),
legend.position="bottom",
legend.title = element_blank(),
legend.text = element_text(size=10),
legend.key = element_rect(colour = "black"),
legend.box.background = element_rect(colour = "black", size = 1),
axis.text.x = element_text(angle = 45, vjust = 0.5, hjust = 0.6,size=10, colour = 'black'),
axis.text.y = element_text(size=10))
VIX_MSCI_plot
ay <- list(
tickfont = list(size=12),
titlefont=list(size=15),
range = c(min(df_2[61:267,2:3])/scale,max(df_2[61:267,2:3])/scale),
overlaying = "y",
nticks = 6,
side = "right",
title = ""
)
ay
p <- ggplotly(VIX_MSCI_plot) %>%
add_lines(x=~date, y=~value, colors=NULL, yaxis="y2",
data=df, showlegend=FALSE, inherit=FALSE) %>%
layout(yaxis2 = ay,
legend = list(orientation = "h", x = 0, y =-0.2),
margin = list(r = 25)
) %>%
config(displayModeBar = FALSE)
p
# For loop para remover legendas
for (i in 1:6) {
p$x$data[[i]]$showlegend <- F
}
p_VIX_MSCI <- p
# Configurações finais ####
list_p <- list(p_IBC,p_fiscal,p_IPCA_BCB,p_IPCA_Ind,p_juros_cambio,p_metas,p_PIB_Hiato,p_VIX_MSCI)
list_new <- list()
for (j in list_p){
for (i in 1:length(j$x$data)){
if (!is.null(j$x$data[[i]]$name)){
j$x$data[[i]]$name =  gsub("\\(","",str_split(j$x$data[[i]]$name,",")[[1]][1])
}
}
list_p <- list(p_IBC,p_fiscal,p_IPCA_BCB,p_IPCA_Ind,p_juros_cambio,p_metas,p_PIB_Hiato,p_VIX_MSCI)
list_new <- list()
for (j in list_p){
for (i in 1:length(j$x$data)){
if (!is.null(j$x$data[[i]]$name)){
j$x$data[[i]]$name =  gsub("\\(","",str_split(j$x$data[[i]]$name,",")[[1]][1])
}
}
list_new[[(length(list_new)+1)]] <- j
}
length(list_p)
for (i in list_p){
str(i)
}
glimpse(list_p)
class(list_p)
str(list_p)
list_p$x
list_p$$x
list_p$data
list_p$width
list_p[1]$x
list_p[[1]]$x
which(i == list_p[[1]]$x)
for (i in list_p){
i <- list_new[1]
}
list_new[1]
p_IBC
I
i
list_names <- list('p_IBC','p_fiscal','p_IPCA_BCB','p_IPCA_Ind','p_juros_cambio','p_metas','p_PIB_Hiato','p_VIX_MSCI')
for (i in 1:length(list_new)){
assign(list_names[i],list_new[i])
}
?assign
list_names[i]
list_names <- c('p_IBC','p_fiscal','p_IPCA_BCB','p_IPCA_Ind','p_juros_cambio','p_metas','p_PIB_Hiato','p_VIX_MSCI')
list_p <- list(p_IBC,p_fiscal,p_IPCA_BCB,p_IPCA_Ind,p_juros_cambio,p_metas,p_PIB_Hiato,p_VIX_MSCI)
list_names <- c('p_IBC','p_fiscal','p_IPCA_BCB','p_IPCA_Ind','p_juros_cambio','p_metas','p_PIB_Hiato','p_VIX_MSCI')
list_new <- list()
for (j in list_p){
for (i in 1:length(j$x$data)){
if (!is.null(j$x$data[[i]]$name)){
j$x$data[[i]]$name =  gsub("\\(","",str_split(j$x$data[[i]]$name,",")[[1]][1])
}
}
list_new[[(length(list_new)+1)]] <- j
}
for (i in 1:length(list_new)){
assign(list_names[i],list_new[i])
}
p_IBC
p_fiscal
p_IPCA_BCB
list_p[[1]]
source('~/Doutorado/PED - CE342/Aulas/Macro/Slides_Aula_Macro/Graficos_Aula_Macro.R', echo=TRUE)
p_IBC
p_PIB_Hiato
fmi_comm[,2]
source('~/Doutorado/PED - CE342/Aulas/Macro/Slides_Aula_Macro/Graficos_Aula_Macro.R', echo=TRUE)
p_IBC
